const path=require("path"),sqlite3=require("./sqlite3-binding.js"),EventEmitter=require("events").EventEmitter;function normalizeMethod(t){return function(e){let n;const o=Array.prototype.slice.call(arguments,1);if("function"==typeof o[o.length-1]){const t=o[o.length-1];n=function(e){e&&t(e)}}const r=new Statement(this,e,n);return t.call(this,r,o)}}function inherits(t,e){for(const n in e.prototype)t.prototype[n]=e.prototype[n]}module.exports=exports=sqlite3,sqlite3.cached={Database:function(t,e,n){if(""===t||":memory:"===t)return new Database(t,e,n);let o;if(t=path.resolve(t),sqlite3.cached.objects[t]){o=sqlite3.cached.objects[t];const a="number"==typeof e?n:e;if("function"==typeof a){function r(){a.call(o,null)}o.open?process.nextTick(r):o.once("open",r)}}else o=sqlite3.cached.objects[t]=new Database(t,e,n);return o},objects:{}};const Database=sqlite3.Database,Statement=sqlite3.Statement,Backup=sqlite3.Backup;inherits(Database,EventEmitter),inherits(Statement,EventEmitter),inherits(Backup,EventEmitter),Database.prototype.prepare=normalizeMethod(function(t,e){return e.length?t.bind.apply(t,e):t}),Database.prototype.run=normalizeMethod(function(t,e){return t.run.apply(t,e).finalize(),this}),Database.prototype.get=normalizeMethod(function(t,e){return t.get.apply(t,e).finalize(),this}),Database.prototype.all=normalizeMethod(function(t,e){return t.all.apply(t,e).finalize(),this}),Database.prototype.each=normalizeMethod(function(t,e){return t.each.apply(t,e).finalize(),this}),Database.prototype.map=normalizeMethod(function(t,e){return t.map.apply(t,e).finalize(),this}),Database.prototype.backup=function(){let t;return t=arguments.length<=2?new Backup(this,arguments[0],"main","main",!0,arguments[1]):new Backup(this,arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]),t.retryErrors=[sqlite3.BUSY,sqlite3.LOCKED],t},Statement.prototype.map=function(){const t=Array.prototype.slice.call(arguments),e=t.pop();return t.push(function(t,n){if(t)return e(t);const o={};if(n.length){const t=Object.keys(n[0]),e=t[0];if(t.length>2)for(let t=0;t<n.length;t++)o[n[t][e]]=n[t];else{const r=t[1];for(let t=0;t<n.length;t++)o[n[t][e]]=n[t][r]}}e(t,o)}),this.all.apply(this,t)};let isVerbose=!1;const supportedEvents=["trace","profile","change"];Database.prototype.addListener=Database.prototype.on=function(t){const e=EventEmitter.prototype.addListener.apply(this,arguments);return supportedEvents.indexOf(t)>=0&&this.configure(t,!0),e},Database.prototype.removeListener=function(t){const e=EventEmitter.prototype.removeListener.apply(this,arguments);return supportedEvents.indexOf(t)>=0&&!this._events[t]&&this.configure(t,!1),e},Database.prototype.removeAllListeners=function(t){const e=EventEmitter.prototype.removeAllListeners.apply(this,arguments);return supportedEvents.indexOf(t)>=0&&this.configure(t,!1),e},sqlite3.verbose=function(){if(!isVerbose){const t=require("./trace");["prepare","get","run","all","each","map","close","exec"].forEach(function(e){t.extendTrace(Database.prototype,e)}),["bind","get","run","all","each","map","reset","finalize"].forEach(function(e){t.extendTrace(Statement.prototype,e)}),isVerbose=!0}return sqlite3};